name: Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build and Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  # docker:
  #   name: Publish to Docker Hub
  #   runs-on: ubuntu-latest
  #   needs: [ build ]
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2

  #     - name: Extract version
  #       id: extract_version
  #       run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  #     - name: Build Docker Image
  #       uses: docker/build-push-action@v2
  #       env:
  #         TAG_VERSION: ${{ steps.extract_version.outputs.VERSION }}
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:$TAG_VERSION

  # deploy:
  #   name: Deploy to VPS
  #   runs-on: ubuntu-latest
  #   needs: [ docker ]
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Compose
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y docker-compose

  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@v0.1.3
  #       env:
  #         TAG_VERSION: ${{ steps.extract_version.outputs.VERSION }}
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         port: ${{ secrets.SSH_PORT }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'cd ${{ secrets.PROJECT_PATH }}'
  #           export DOCKERHUB_REPOSITORY="${{ secrets.DOCKERHUB_REPOSITORY }}"
  #           export TAG_VERSION="${TAG_VERSION}"
  #           export MYSQL_HOST="${{ secrets.MYSQL_HOST }}"
  #           export MYSQL_PORT="${{ secrets.MYSQL_PORT }}"
  #           export MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}"
  #           export MYSQL_USERNAME="${{ secrets.MYSQL_USERNAME }}"
  #           export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
  #           export MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}"
  #           export JWT_KEY="${{ secrets.JWT_KEY }}"
  #           ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'docker-compose -f ./deployments/docker-compose.yaml down || true'
  #           ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'docker build -t ${{ secrets.DOCKERHUB_REPOSITORY }}:$TAG_VERSION -f ./deployments/Dockerfile . || true'
  #           ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} 'docker-compose -f ./deployments/docker-compose.yaml up --build -d'
