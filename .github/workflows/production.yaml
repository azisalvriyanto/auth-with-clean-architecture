name: Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  TAG_VERSION: '2.0.0'

jobs:

  build:
    name: Build and Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployments/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.TAG_VERSION }}

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            git pull origin main
            export DOCKERHUB_REPOSITORY="${{ secrets.DOCKERHUB_REPOSITORY }}"
            export TAG_VERSION="${{ env.TAG_VERSION }}"
            export MYSQL_HOST="${{ secrets.MYSQL_HOST }}"
            export MYSQL_PORT="${{ secrets.MYSQL_PORT }}"
            export MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}"
            export MYSQL_USERNAME="${{ secrets.MYSQL_USERNAME }}"
            export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
            export MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}"
            export JWT_KEY="${{ secrets.JWT_SECRET_KEY }}"
            docker-compose -f ./deployments/docker-compose.yaml down
            docker build -t ${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.TAG_VERSION }} -f ./deployments/Dockerfile .
            docker-compose -f ./deployments/docker-compose.yaml up --build -d
