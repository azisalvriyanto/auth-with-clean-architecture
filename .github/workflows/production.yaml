name: Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build and Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Set up environment variables
      #   run: |
      #     echo "DOCKERHUB_REPOSITORY=${{ vars.DOCKERHUB_REPOSITORY }}" >> $GITHUB_ENV
      #     echo "TAG_VERSION=${{ vars.TAG_VERSION }}" >> $GITHUB_ENV
      #     echo "PORT=${{ vars.PORT }}" >> $GITHUB_ENV
      #     echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
      #     echo "MYSQL_USERNAME=${{ vars.MYSQL_USERNAME }}" >> $GITHUB_ENV
      #     echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
      #     echo "MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }}" >> $GITHUB_ENV
      #     echo "JWT_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Build and push Docker Image
        # env:
        #   DOCKERHUB_REPOSITORY: ${{ vars.DOCKERHUB_REPOSITORY }}
        #   TAG_VERSION: ${{ vars.TAG_VERSION }}
        #   PORT: ${{ vars.PORT }}
        #   MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        #   MYSQL_USERNAME: ${{ vars.MYSQL_USERNAME }}
        #   MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        #   MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
        #   JWT_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          sed -i 's/${DOCKERHUB_REPOSITORY}/${{ vars.DOCKERHUB_REPOSITORY }}/g' deployments/docker-compose.yaml
          sed -i 's/${TAG_VERSION}/${{ vars.TAG_VERSION }}/g' deployments/docker-compose.yaml
          sed -i 's/${PORT}/${{ vars.PORT }}/g' deployments/docker-compose.yaml
          sed -i 's/${MYSQL_ROOT_PASSWORD}/${{ secrets.MYSQL_ROOT_PASSWORD }}/g' deployments/docker-compose.yaml
          sed -i 's/${MYSQL_USERNAME}/${{ vars.MYSQL_USERNAME }}/g' deployments/docker-compose.yaml
          sed -i 's/${MYSQL_PASSWORD}/${{ secrets.MYSQL_PASSWORD }}/g' deployments/docker-compose.yaml
          sed -i 's/${MYSQL_DATABASE}/${{ vars.MYSQL_DATABASE }}/g' deployments/docker-compose.yaml
          sed -i 's/${JWT_KEY}/${{ secrets.JWT_SECRET_KEY }}/g' deployments/docker-compose.yaml
          docker-compose -f ./deployments/docker-compose.yaml build
          docker-compose push ${{ vars.DOCKERHUB_USERNAME }}/${DOCKERHUB_REPOSITORY}:${TAG_VERSION}

      # - name: Build Docker Image  
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./deployments/docker-compose.yaml
      #     push: true
      #     tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.TAG_VERSION }}
      #     build-args: |
      #       "DOCKERHUB_REPOSITORY=${{ vars.DOCKERHUB_REPOSITORY }}"
      #       "TAG_VERSION=${{ vars.TAG_VERSION }}"
      #       "PORT=${{ vars.PORT }}"
      #       "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}"
      #       "MYSQL_USERNAME=${{ vars.MYSQL_USERNAME }}"
      #       "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}"
      #       "MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }}"
      #       "JWT_KEY=${{ secrets.JWT_SECRET_KEY }}"

  # deploy:
  #   name: Deploy to VPS
  #   runs-on: ubuntu-latest
  #   needs: [ docker ]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up environment variables
  #       run: |
  #         echo "DOCKERHUB_REPOSITORY=${{ vars.DOCKERHUB_REPOSITORY }}" >> $GITHUB_ENV
  #         echo "TAG_VERSION=${{ vars.TAG_VERSION }}" >> $GITHUB_ENV
  #         echo "PORT=${{ vars.PORT }}" >> $GITHUB_ENV
  #         echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
  #         echo "MYSQL_USERNAME=${{ vars.MYSQL_USERNAME }}" >> $GITHUB_ENV
  #         echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
  #         echo "MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }}" >> $GITHUB_ENV
  #         echo "JWT_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV

  #     - name: Deploy to VPS
  #       uses: appleboy/ssh-action@v0.1.4
  #       with:
  #         host: ${{ vars.SSH_HOST }}
  #         port: ${{ vars.SSH_PORT }}
  #         username: ${{ vars.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         # key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           docker stop ${{ vars.DOCKERHUB_REPOSITORY }} || true
  #           docker rm ${{ vars.DOCKERHUB_REPOSITORY }} || true
  #           docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.TAG_VERSION }}
  #           docker run -d ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ vars.TAG_VERSION }}
