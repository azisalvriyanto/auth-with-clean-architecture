// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// RequestHandlerInterface is an autogenerated mock type for the RequestHandlerInterface type
type RequestHandlerInterface struct {
	mock.Mock
}

type RequestHandlerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *RequestHandlerInterface) EXPECT() *RequestHandlerInterface_Expecter {
	return &RequestHandlerInterface_Expecter{mock: &_m.Mock}
}

// Login provides a mock function with given fields: c
func (_m *RequestHandlerInterface) Login(c *gin.Context) {
	_m.Called(c)
}

// RequestHandlerInterface_Login_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Login'
type RequestHandlerInterface_Login_Call struct {
	*mock.Call
}

// Login is a helper method to define mock.On call
//   - c *gin.Context
func (_e *RequestHandlerInterface_Expecter) Login(c interface{}) *RequestHandlerInterface_Login_Call {
	return &RequestHandlerInterface_Login_Call{Call: _e.mock.On("Login", c)}
}

func (_c *RequestHandlerInterface_Login_Call) Run(run func(c *gin.Context)) *RequestHandlerInterface_Login_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *RequestHandlerInterface_Login_Call) Return() *RequestHandlerInterface_Login_Call {
	_c.Call.Return()
	return _c
}

func (_c *RequestHandlerInterface_Login_Call) RunAndReturn(run func(*gin.Context)) *RequestHandlerInterface_Login_Call {
	_c.Call.Return(run)
	return _c
}

// ShowProfile provides a mock function with given fields: c
func (_m *RequestHandlerInterface) ShowProfile(c *gin.Context) {
	_m.Called(c)
}

// RequestHandlerInterface_ShowProfile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ShowProfile'
type RequestHandlerInterface_ShowProfile_Call struct {
	*mock.Call
}

// ShowProfile is a helper method to define mock.On call
//   - c *gin.Context
func (_e *RequestHandlerInterface_Expecter) ShowProfile(c interface{}) *RequestHandlerInterface_ShowProfile_Call {
	return &RequestHandlerInterface_ShowProfile_Call{Call: _e.mock.On("ShowProfile", c)}
}

func (_c *RequestHandlerInterface_ShowProfile_Call) Run(run func(c *gin.Context)) *RequestHandlerInterface_ShowProfile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *RequestHandlerInterface_ShowProfile_Call) Return() *RequestHandlerInterface_ShowProfile_Call {
	_c.Call.Return()
	return _c
}

func (_c *RequestHandlerInterface_ShowProfile_Call) RunAndReturn(run func(*gin.Context)) *RequestHandlerInterface_ShowProfile_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewRequestHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewRequestHandlerInterface creates a new instance of RequestHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRequestHandlerInterface(t mockConstructorTestingTNewRequestHandlerInterface) *RequestHandlerInterface {
	mock := &RequestHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
